{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/Header/Header.js","api/apiConfig.js","api/auth.js","Store/authSlice/authReducer.js","Store/boardSlice/boardReducer.js","Store/authSlice/authActions.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","Store/modalSlice/modalReducer.js","Store/rootStore.js","api/crud.js","components/Cell/Cell.js","components/Column/Column.js","components/Board/Board.js","Store/boardSlice/boardActions.js","components/Modal/Modal-Body-Column-EditCreate.js","components/Modal/Modal-Body-Cell-EditCreate.js","components/Modal/Modal-Body-Delete.js","components/Modal/Modal-Setup.js","components/Modal/Modal.js","Store/modalSlice/modalActions.js","App.js","index.js"],"names":["AuthenticatedRoute","user","render","component","rest","to","authenticatedOptions","className","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","variant","expand","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","id","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","credentials","axios","method","url","data","password","password_confirmation","passwordConfirmation","signIn","signOut","headers","Authorization","token","changePassword","passwords","old","oldPassword","new","newPassword","userAuthSlice","createSlice","name","initialState","reducers","setUser","state","action","payload","clearUser","userAuthActions","actions","boardSlice","board","setBoard","addColumn","push","editColumn","index","newColumn","deleteColumn","splice","addCell","columnID","editCell","newCell","deleteCell","move","columns","find","col","_id","source","droppableId","cells","removed","destination","boardActions","signInAction","dispatch","a","authApi","response","error","console","withRouter","props","useDispatch","useState","setEmail","setPassword","setPasswordConfirmation","useEffect","handleChange","event","target","value","Form","onSubmit","preventDefault","signUpAction","history","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","onSignIn","signOutAction","useSelector","auth","setOldPassword","setNewPassword","changePass","changePasswordAction","modalSlice","show","modalType","elementId","modalSwitch","modalActions","store","configureStore","reducer","authReducer","boardReducer","modal","modalReducer","createColumn","form","createCell","Cell","company","draggableId","provided","Card","draggableProps","dragHandleProps","ref","innerRef","Stack","src","DropdownButton","title","Dropdown","Item","onClick","Column","Col","droppableProps","Divider","map","cell","Board","setupModal","Container","onDragEnd","result","getState","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Error","Row","ModalBody","htmlFor","aria-describedby","FloatingLabel","label","size","as","height","modalTitle","modalBody","apiCall","buttonText","danger","ModalBodyCreateEditColumn","apiCrud","ModalBodyCreateEditCell","ModalBodyDelete","NewModal","modalOptions","modalSetup","apiData","Modal","onHide","centered","closeButton","Title","currentTarget","field","crud","Body","Footer","App","path","newestOnTop","rtl","pauseOnFocusLoss","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.78789084.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return <Route render={() => <Redirect to='/' />} />\n  }\n}\n\nexport default AuthenticatedRoute\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='dark' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>react-auth-template</Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://thawing-anchorage-80200.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from './apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  user: null\n}\n\nconst userAuthSlice = createSlice({\n  name: 'Authentication',\n  initialState,\n  reducers: {\n    setUser (state, action) {\n      state.user = action.payload\n    },\n    clearUser (state) {\n      state.user = null\n    }\n  }\n})\n\nexport const userAuthActions = userAuthSlice.actions\nexport default userAuthSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  board: null\n}\n\nconst boardSlice = createSlice({\n  name: 'Board',\n  initialState,\n  reducers: {\n    setBoard (state, action) {\n      state.board = action.payload\n    },\n    addColumn (state, action) {\n      state.board.push(action.payload)\n    },\n    editColumn (state, action) {\n      state.board[action.payload.index] = action.payload.newColumn\n    },\n    deleteColumn (state, action) {\n      state.board.splice(action.payload, 1)\n    },\n    addCell (state, action) {\n      state.board[action.payload.columnID].push(action.payload)\n    },\n    editCell (state, action) {\n      state.board[action.payload.columnID] = action.payload.newCell\n    },\n    deleteCell (state, action) {\n      state.board[action.payload.columnID].splice(action.payload, 1)\n    },\n    move (state, action) {\n      const sourceCol = state.board.columns.find(col => col._id === action.payload.source.droppableId)\n      const [removed] = sourceCol.cells.splice(action.payload.source.index, 1)\n      const destinationCol = state.board.columns.find(col => col._id === action.payload.destination.droppableId)\n      destinationCol.cells.splice(action.payload.destination.index, 0, removed)\n    }\n  }\n})\n\nexport const boardActions = boardSlice.actions\nexport default boardSlice.reducer\n","import * as authApi from '../../api/auth'\n\nimport { userAuthActions } from './authReducer'\nimport { boardActions } from '../boardSlice/boardReducer'\n\nexport const signUpAction = credentials => {\n  return dispatch => {\n    const signUp = async () => {\n      const response = await authApi.signUp(credentials)\n      const user = response.data.user\n\n      dispatch(userAuthActions.setUser(user))\n    }\n    try {\n      signUp(credentials)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\n\nexport const signInAction = credentials => {\n  return dispatch => {\n    const signIn = async () => {\n      const response = await authApi.signIn(credentials)\n\n      const user = response.data.user\n      const board = response.data.board\n\n      dispatch(boardActions.setBoard(board))\n      dispatch(userAuthActions.setUser(user))\n    }\n    try {\n      signIn(credentials)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\n\nexport const signOutAction = user => {\n  return dispatch => {\n    const signOut = async () => {\n      await authApi.signOut(user)\n      dispatch(userAuthActions.clearUser())\n    }\n    try {\n      signOut(user)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\n\nexport const changePasswordAction = (passwords, user) => {\n  return () => {\n    const changePass = async () => {\n      authApi.changePassword(passwords, user)\n    }\n    try {\n      changePass()\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { useDispatch } from 'react-redux'\nimport { signUpAction } from '../../Store/authSlice/authActions'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = props => {\n  const dispatch = useDispatch()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const credentials = { email, password, passwordConfirmation }\n\n  useEffect(() => {}, [credentials])\n\n  const handleChange = event => {\n    event.target.name === 'email' && setEmail(event.target.value)\n    event.target.name === 'password' && setPassword(event.target.value)\n    event.target.name === 'passwordConfirmation' && setPasswordConfirmation(event.target.value)\n  }\n\n  const onSignUp = event => {\n    event.preventDefault()\n\n    dispatch(signUpAction(credentials))\n    props.history.push('/')\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(SignUp)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { useDispatch } from 'react-redux'\nimport { signInAction } from '../../Store/authSlice/authActions'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = props => {\n  const dispatch = useDispatch()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const credentials = { email, password }\n\n  useEffect(() => {}, [credentials])\n\n  const handleChange = event => {\n    event.target.name === 'email'\n      ? setEmail(event.target.value)\n      : setPassword(event.target.value)\n  }\n\n  const onSignIn = async event => {\n    event.preventDefault()\n\n    await dispatch(signInAction(credentials))\n    props.history.push('/')\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={credentials.email}\n              placeholder='Enter email'\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={credentials.password}\n              type='password'\n              placeholder='Password'\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(SignIn)\n","import { withRouter } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signOutAction } from '../../Store/authSlice/authActions'\n\nconst SignOut = props => {\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.auth.user)\n\n  dispatch(signOutAction(user))\n\n  return ''\n}\n\nexport default withRouter(SignOut)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { changePasswordAction } from '../../Store/authSlice/authActions'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = props => {\n  const dispatch = useDispatch()\n\n  const user = useSelector(state => state.auth.user)\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const passwords = { oldPassword, newPassword }\n\n  useEffect(() => {}, [passwords])\n\n  const handleChange = event => {\n    event.target.name === 'oldPassword'\n      ? setOldPassword(event.target.value)\n      : setNewPassword(event.target.value)\n  }\n\n  const onChangePassword = event => {\n    event.preventDefault()\n\n    dispatch(changePasswordAction(passwords, user))\n    props.history.push('/')\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(ChangePassword)\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  show: false,\n  modalType: null,\n  elementId: null\n}\n\nconst modalSlice = createSlice({\n  name: 'Modal',\n  initialState,\n  reducers: {\n    modalSwitch (state, action) {\n      state.modalType = action.payload.modalType\n      state.elementId = action.payload.elementId\n      state.show = !state.show\n    }\n  }\n})\n\nexport const modalActions = modalSlice.actions\nexport default modalSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport authReducer from './authSlice/authReducer'\nimport boardReducer from './boardSlice/boardReducer'\nimport modalReducer from './modalSlice/modalReducer'\n\nconst store = configureStore({\n  reducer: { auth: authReducer, board: boardReducer, modal: modalReducer }\n})\n\nexport default store\n","import apiUrl from './apiConfig'\nimport axios from 'axios'\n\n//  CREATE COLUMN\nexport const createColumn = data => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/column/',\n    headers: {\n      Authorization: `Bearer ${data.token}`\n    },\n    data: {\n      elementId: data.elementId,\n      form: data.form\n    }\n  })\n}\n\n//  CREATE CELL\nexport const createCell = data => {\n  return axios({\n    url: apiUrl + '/cell/',\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${data.token}`\n    },\n    data: {\n      elementId: data.elementId,\n      form: data.form\n    }\n  })\n}\n\n// READ BOARD\nexport const getBoard = token => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/board/',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n}\n\n// UPDATE MOVE CELLS\nexport const move = data => {\n  return axios({\n    url: apiUrl + '/column/',\n    method: 'PUT',\n    headers: {\n      Authorization: `Bearer ${data.token}`\n    },\n    data: { source: data.source, destination: data.destination }\n  })\n}\n\n//  UPDATE COLUMN\nexport const editColumn = data => {\n  return axios({\n    url: apiUrl + '/column/' + data.elementId,\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${data.token}`\n    },\n    data: {\n      elementId: data.elementId,\n      form: data.form\n    }\n  })\n}\n\n// UPDATE CELL\nexport const editCell = data => {\n  return axios({\n    url: apiUrl + '/cell/' + data.elementId,\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${data.token}`\n    },\n    data: {\n      elementId: data.elementId,\n      form: data.form\n    }\n  })\n}\n\n// DELETE COLUMN\nexport const deleteColumn = data => {\n  return axios({\n    url: apiUrl + '/column/' + data.elementId,\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${data.token}`\n    }\n  })\n}\n\n// DELETE COLUMN\nexport const deleteCell = data => {\n  return axios({\n    url: apiUrl + '/cell/' + data.elementId,\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${data.token}`\n    }\n  })\n}\n","import React from 'react'\n\nimport { useDispatch } from 'react-redux'\nimport { modalActions } from '../../Store/modalSlice/modalReducer'\n\nimport { Stack, DropdownButton, Dropdown, Card } from 'react-bootstrap'\n\nimport { Draggable } from 'react-beautiful-dnd'\n\nconst Cell = props => {\n  const dispatch = useDispatch()\n  const { modalSwitch } = modalActions\n\n  const { id, index, company } = props\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {provided => (\n        <Card\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          id={id}\n          className='bg-color-primary border border-dark cell'\n        >\n          <Stack className='d-flex'>\n            <img src='https://icongr.am/devicon/google-original.svg?size=14&color=currentColor' />\n            <div className='mx-auto text-center pt-2'>{company}</div>\n            <DropdownButton\n              variant='link'\n              id='dropdown-basic-button'\n              title={\n                <img src='https://icongr.am/entypo/dots-three-vertical.svg?size=14&color=currentColor' />\n              }\n            >\n              <Dropdown.Item\n                onClick={() => {\n                  dispatch(\n                    modalSwitch({ modalType: 'edit-cell', elementId: id })\n                  )\n                }}\n              >\n                Edit Cell\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() => {\n                  dispatch(\n                    modalSwitch({ modalType: 'delete-cell', elementId: id })\n                  )\n                }}\n              >\n                Delete Cell\n              </Dropdown.Item>\n            </DropdownButton>\n          </Stack>\n        </Card>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Cell\n","import React from 'react'\n\nimport { useDispatch } from 'react-redux'\nimport { modalActions } from '../../Store/modalSlice/modalReducer'\n\nimport { Col, Stack, DropdownButton, Dropdown } from 'react-bootstrap'\nimport Cell from '../Cell/Cell.js'\n\nimport { Droppable } from 'react-beautiful-dnd'\n\nconst Column = props => {\n  const dispatch = useDispatch()\n  const { modalSwitch } = modalActions\n\n  const { id, name, cells } = props\n\n  return (\n    <Col className='column border border-dark fluid m-3 pb-3'>\n      <Droppable droppableId={id}>\n        {provided => (\n          <div {...provided.droppableProps} ref={provided.innerRef} id={id}>\n            <Stack className='d-flex'>\n              <h6 className='text-center pt-2'>{name}</h6>\n              <DropdownButton\n                className='ms-auto'\n                variant='link'\n                id='dropdown-basic-button'\n                title={\n                  <img src='https://icongr.am/entypo/dots-three-horizontal.svg?size=14&color=currentColor' />\n                }\n              >\n                <Dropdown.Item\n                  onClick={() => {\n                    dispatch(\n                      modalSwitch({ modalType: 'edit-column', elementId: id })\n                    )\n                  }}\n                >\n                  Rename Column\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => {\n                    dispatch(\n                      modalSwitch({ modalType: 'delete-column', elementId: id })\n                    )\n                  }}\n                >\n                  Delete Column\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item\n                  onClick={() => {\n                    dispatch(\n                      modalSwitch({ modalType: 'create-cell', elementId: id })\n                    )\n                  }}\n                >\n                  New Cell\n                </Dropdown.Item>\n              </DropdownButton>\n            </Stack>\n            {cells?.map((cell, index) => (\n              <Cell key={cell._id} id={cell._id} {...cell} index={index} />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </Col>\n  )\n}\n\nexport default Column\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { modalActions } from '../../Store/modalSlice/modalReducer'\nimport { moveCells } from '../../Store/boardSlice/boardActions'\n\nimport { Button, Container, Row, Stack } from 'react-bootstrap'\nimport Column from '../Column/Column'\n\nimport { DragDropContext } from 'react-beautiful-dnd'\n\nconst Board = () => {\n  const dispatch = useDispatch()\n  const setupModal = modalActions.setupModal\n\n  const board = useSelector(state => state.board.board)\n  const id = board._id\n\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return\n    }\n\n    const { source, destination } = result\n    dispatch(moveCells({ source, destination }))\n  }\n\n  return (\n    <Container id='board' className='border border-dark'>\n      <Stack className='d-flex'>\n        <div className='text-center pt-2'>Board Job Tracker</div>\n        <Button\n          variant='outline-link'\n          className='ms-auto p-2'\n          onClick={() => {\n            dispatch(setupModal({ modalType: 'create-column', elementId: id }))\n          }}\n        >\n          New Column\n          <img\n            className='ms-2'\n            src='https://icongr.am/clarity/add.svg?size=20&color=currentColor'\n          />\n        </Button>\n      </Stack>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Row>\n          {board.columns.map((col, index) => (\n            <Column key={index} id={col._id} {...col} />\n          ))}\n        </Row>\n      </DragDropContext>\n    </Container>\n  )\n}\n\nexport default Board\n","import store from '../rootStore'\n\nimport { toast } from 'react-toastify'\n\nimport { move } from '../../api/crud'\nimport { boardActions } from './boardReducer'\n\nexport const moveCells = data => {\n  return async dispatch => {\n    const token = store.getState().auth.user.token\n    try {\n      dispatch(boardActions.move({ ...data }))\n      const response = await move({ token, ...data })\n      if (response) {\n        toast.success('Saved', {\n          position: 'top-right',\n          autoClose: 2500,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true\n        })\n      } else {\n        throw new Error('Could not save on cloud!')\n      }\n    } catch (err) {\n      toast.error(err, {\n        position: 'top-right',\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true\n      })\n    }\n  }\n}\n","import React from 'react'\nimport { Form } from 'react-bootstrap'\n\nconst ModalBody = props => (\n  <>\n    <Form.Label htmlFor='name'>{props}</Form.Label>\n    <Form.Control\n      type='text'\n      id='name'\n      aria-describedby='textHelpBlock'\n      required\n    />\n  </>\n)\n\nexport default ModalBody\n","import React from 'react'\nimport { Form, FloatingLabel } from 'react-bootstrap'\n\nconst ModalBody = props => (\n  <>\n    <FloatingLabel htmlFor='company' label={`Company Name${props}`}>\n      <Form.Control\n        size='sm'\n        type='text'\n        id='company'\n        aria-describedby='textHelpBlock'\n        placeholder='1'\n        required={props === '*'}\n      />\n    </FloatingLabel>\n    <FloatingLabel htmlFor='position' label={`Position Title${props}`}>\n      <Form.Control\n        size='sm'\n        type='text'\n        id='position'\n        aria-describedby='textHelpBlock'\n        placeholder='1'\n        required={props === '*'}\n      />\n    </FloatingLabel>\n    <FloatingLabel htmlFor='location' label={`Location${props}`}>\n      <Form.Control\n        size='sm'\n        type='text'\n        id='location'\n        aria-describedby='textHelpBlock'\n        placeholder='1'\n        required={props === '*'}\n      />\n    </FloatingLabel>\n    <FloatingLabel htmlFor='contactName' label='Contact Name'>\n      <Form.Control\n        size='sm'\n        type='text'\n        id='contactName'\n        aria-describedby='textHelpBlock'\n        placeholder='1'\n      />\n    </FloatingLabel>\n    <FloatingLabel htmlFor='contactTitle' label='Contact Title'>\n      <Form.Control\n        size='sm'\n        type='text'\n        id='contactTitle'\n        aria-describedby='textHelpBlock'\n        placeholder='1'\n      />\n    </FloatingLabel>\n    <FloatingLabel htmlFor='contactEmail' label='Contact Email'>\n      <Form.Control\n        size='sm'\n        type='email'\n        id='contactEmail'\n        aria-describedby='emailHelpBlock'\n        placeholder='1'\n      />\n    </FloatingLabel>\n    <FloatingLabel htmlFor='description' label='Description'>\n      <Form.Control\n        id='description'\n        as='textarea'\n        placeholder='Write a description here'\n        style={{ height: '150px' }}\n      />\n    </FloatingLabel>\n  </>\n)\n\nexport default ModalBody\n","import React from 'react'\nimport { Form } from 'react-bootstrap'\n\nconst ModalBody = title => (\n  <Form.Label>You are about to<b>{title}.</b> Are you sure ?</Form.Label>\n)\n\nexport default ModalBody\n","import * as apiCrud from '../../api/crud'\n\nimport ModalBodyCreateEditColumn from './Modal-Body-Column-EditCreate'\nimport ModalBodyCreateEditCell from './Modal-Body-Cell-EditCreate'\nimport ModalBodyDelete from './Modal-Body-Delete'\n\nconst setupModal = modalType => {\n  let [modalTitle, modalBody, apiCall, buttonText, danger] = []\n\n  switch (modalType) {\n  case 'create-column':\n    modalTitle = 'New Column'\n    buttonText = 'Create Column'\n    modalBody = ModalBodyCreateEditColumn('Enter Name')\n    apiCall = apiCrud.createColumn\n    break\n  case 'create-cell':\n    modalTitle = 'New Cell'\n    buttonText = 'Create Cell'\n    modalBody = ModalBodyCreateEditCell('*')\n    apiCall = apiCrud.createCell\n    break\n  case 'edit-column':\n    modalTitle = 'Rename Column'\n    buttonText = 'Submit'\n    modalBody = ModalBodyCreateEditColumn('Enter New Name')\n    apiCall = apiCrud.editColumn\n    break\n  case 'edit-cell':\n    modalTitle = 'Edit Cell'\n    buttonText = 'Submit'\n    modalBody = ModalBodyCreateEditCell('')\n    apiCall = apiCrud.editCell\n    break\n  case 'delete-column':\n    modalTitle = 'Delete Column'\n    buttonText = 'Confirm'\n    modalBody = ModalBodyDelete(modalTitle)\n    apiCall = apiCrud.deleteColumn\n    danger = true\n    break\n  case 'delete-cell':\n    modalTitle = 'Delete Cell'\n    buttonText = 'Confirm'\n    modalBody = ModalBodyDelete(modalTitle)\n    apiCall = apiCrud.deleteCell\n    danger = true\n    break\n  }\n  return { modalTitle, modalBody, apiCall, buttonText, danger }\n}\n\nexport default setupModal\n","/* eslint-disable indent */\nimport React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { modalActions } from '../../Store/modalSlice/modalReducer'\nimport { modalApiCall } from '../../Store/modalSlice/modalActions'\n\nimport { Button, Form, Modal } from 'react-bootstrap'\n\nimport modalSetup from './Modal-Setup'\n\nconst NewModal = props => {\n  const dispatch = useDispatch()\n  const { modalSwitch } = modalActions\n\n  const user = useSelector(state => state.auth.user)\n  const { modalType, elementId, show } = useSelector(state => state.modal)\n\n  const modalOptions = modalSetup(modalType)\n  let { modalTitle, modalBody, apiCall, apiData, buttonText, danger } =\n    modalOptions\n\n  const handleSubmit = event => {\n    event.preventDefault()\n\n    apiData = {\n      token: user.token,\n      elementId,\n      form: {}\n    }\n\n    if (event.currentTarget[0].id !== 'name') {\n      for (const field of event.currentTarget) {\n        if (field) {\n          apiData.form[field.id] = field.value\n        }\n      }\n    } else {\n      apiData.form.name = event.currentTarget[0].value\n    }\n\n    dispatch(modalApiCall(apiCall, apiData))\n  }\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => dispatch(modalSwitch({ modalType: null, elementId: null }))}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{modalTitle}</Modal.Title>\n      </Modal.Header>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Body>\n          <Form.Group className='mb-3'>{modalBody}</Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant='secondary'\n            onClick={() =>\n              dispatch(modalSwitch({ modalType: null, elementId: null }))\n            }\n          >\n            Cancel\n          </Button>\n          <Button type='submit' variant={danger && 'danger'}>\n            {buttonText}\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default NewModal\n","import { getBoard } from '../../api/crud'\nimport { boardActions } from '../boardSlice/boardReducer'\nimport { modalActions } from './modalReducer'\n\nexport const modalApiCall = (crud, data) => {\n  return async dispatch => {\n    try {\n      await crud(data)\n      const response = await getBoard(data.token)\n      dispatch(boardActions.setBoard(response.data.board))\n      dispatch(modalActions.modalSwitch({ modalType: null, elementId: null }))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\n","/* eslint-disable no-tabs */\nimport React, { Fragment } from 'react'\nimport { Route } from 'react-router-dom'\n\nimport { useSelector } from 'react-redux'\n\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport Board from './components/Board/Board'\nimport NewModal from './components/Modal/Modal'\n\nconst App = () => {\n  const user = useSelector(state => state.auth.user)\n\n  return (\n    <Fragment>\n      <Header user={user} />\n      <main className='container'>\n        <Route path='/sign-up' render={() => <SignUp />} />\n        <Route path='/sign-in' render={() => <SignIn />} />\n        <AuthenticatedRoute\n          path='/sign-out'\n          user={user}\n          render={() => <SignOut />}\n        />\n        <AuthenticatedRoute\n          path='/change-password'\n          user={user}\n          render={() => <ChangePassword />}\n        />\n        <AuthenticatedRoute\n          exact\n          path='/'\n          user={user}\n          render={() => <Board />}\n        />\n      </main>\n      <ToastContainer\n        position='top-right'\n        autoClose={2500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover={false}\n      />\n      <NewModal user={user} />\n    </Fragment>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\nimport store from './Store/rootStore'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}